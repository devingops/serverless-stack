version: 2.0

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.11

jobs:


  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/repo"

  build:
    docker:
      - image: circleci/node:8.11
    environment:
      CI: false
    steps:
      - run:
          command: pwd
      - run: ls
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "notes-app-client/package.json" }}
          working_directory: notes-app-client
      - run:
          name: install npm packages
          command: npm install
          working_directory: notes-app-client
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
          working_directory: notes-app-client
      - run:
          command: CI=false npm run build
          environment:
            CI: false
          working_directory: notes-app-client
      - run:
          command: CI=false npm run deploy
          environment:
            CI: false
          working_directory: notes-app-client
      - store_artifacts: # special step to save test results as as artifact
          path: ./notes-app-client/build

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - run:
          name: ls debug
          halt_build_on_fail: false  # default true
          command: ls && pwd && cd ~ && pwd && find .
      - run:
          name: tmp dir
          command: ls /tmp
      - run:
          name: Restore compiled assets from workspace
          command: |
            mv /tmp/workspace/assets resources
      - restore_cache:
          key: out-build
      - run:
          name: ls debug
          halt_build_on_fail: false  # default true
          command: ls && pwd && cd ~ && pwd && find .
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 cp ~/serverless-stack/notes-app-client/build s3://www-scott-note-taking-app/prod --recursive

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          requires:
            - checkout_code
      - deploy:
          requires:
            - build
            
