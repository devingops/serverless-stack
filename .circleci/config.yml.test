version: 2.0


jobs:
  checkout_code:
    docker:
      - image: circleci/node:8.11
    steps:
      - checkout

  build:
    docker:
      - image: circleci/node:8.11
    environment:
      CI: false
    working_directory: ~/serverless-stack/notes-app-client
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
          working_directory: notes-app-client
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules  # location depends on npm version
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          working_directory: notes-app-client
      - run: sudo npm install -g npm@latest
      - run:
          command: pwd
          working_directory: notes-app-client
      - run: ls
      - run:
          command: sudo npm install
          working_directory: notes-app-client
      - run:
          command: CI=false npm run build
          environment:
            CI: false
          working_directory: notes-app-client
      - run:
          name: ls debug
          command: ls && pwd
      - save_cache:
          key: out-build
          paths:
            - build
          working_directory: notes-app-client
      - run:
          name: Move compiled assets to workspace
          command: mv build /tmp/workspace/build
          working_directory: notes-app-client

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - run:
          name: ls debug
          halt_build_on_fail: false  # default true
          command: ls && pwd && cd ~ && pwd && find .
      - run:
          name: tmp dir
          command: ls /tmp
      - run:
          name: Restore compiled assets from workspace
          command: |
            mv /tmp/workspace/assets resources
      - restore_cache:
          key: out-build
      - run:
          name: ls debug
          halt_build_on_fail: false  # default true
          command: ls && pwd && cd ~ && pwd && find .
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 cp ~/serverless-stack/notes-app-client/build s3://www-scott-note-taking-app/prod --recursive

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # filters:
            # branches:
            #   only: master
